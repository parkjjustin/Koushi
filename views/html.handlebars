<div class="profile-header">
    <h1>Welcome {{username}}!</h1>
    <p>HTML related interview questions</p>
</div>
<div class="index">
    <h4>HTML Index</h4>
    <a class="index-link" href="#question-block-1">1. What is DOCTYPE? Why do you need it?</a>
    <a class="index-link" href="#question-block-2">2. What is the difference between the HTML tag &lt;div&gt; and &lt;span&gt;?</a>
    <a class="index-link" href="#question-block-3">3. What is a Document Object Model?</a>
    <a class="index-link" href="#question-block-4">4. What's the difference between full standards mode, almost standards mode and quirks mode?</a>
    <a class="index-link" href="#question-block-5">5. What is CORS? And how does it work?</a>
    <a class="index-link" href="#question-block-6">6. What are data-attributes good for?</a>
    <a class="index-link" href="#question-block-7">7. How do you serve a page with content in multiple languages?</a>
    <a class="index-link" href="#question-block-8">8. Consider HTML5 as an open web platform. What are the building blocks of HTML5?</a>
    <a class="index-link" href="#question-block-9">9. Describe the difference between cookies, sessionStorage and localStorage.</a>
    <a class="index-link" href="#question-block-10">10. Describe the difference between &lt;script&gt;, &lt;script async&gt; and &lt;script defer&gt;."</a>
</div>


<div class="html-content">
    <span class="content-title">HTML Knowledge</span>
    <section id="question-block-1">
        <span class="question">1. What is DOCTYPE? Why do you need it?</span>
        <span class="answer">Answer: A document type declaration, or DOCTYPE, is an instruction that associates a particular SGML or XML document (for example, a webpage) with a document type definition (DTD). You need it because is an instruction to the web browser about what version of HTML the page is written in and how the browser should render it.</span>
        <div class="pre">
            <code class="xml">&lt;<span class="pink">!DOCTYPE</span> html&gt;
                            <br>&lt;html <span class="green">lang=</span><span class="yellow">"en"</span>&gt;
                            </code>
        </div>
        <span class="extra-info">It guides how elements should be displayed on the page by the browser. Moreover, DOCTYPE is required to validate markup.</span>
    </section>

    <section id="question-block-2">
        <span class="question">2. What is the difference between the HTML tag &lt;div&gt; and &lt;span&gt;?</span>
        <span class="answer">Answer: div is a block element, span is inline.</span>
        <span class="extra-info">This means that to use them semantically, divs should be used to wrap sections of a document, while spans should be used to wrap small portions of text, images, etc.</span>
    </section>

    <section id="question-block-3">
        <span class="question">3. What is a Document Object Model?</span>
        <span class="answer">Answer: The Document Object Model (DOM) is an application programming interface (API) for valid HTML and well-formed XML documents. It defines the logical structure of documents and the way a document is accessed and manipulated.</span>
        <span class="extra-info">With the object model, JavaScript gets all the power it needs to create dynamic HTML.</span>
    </section>

    <section id="question-block-4">
        <span class="question">4. What's the difference between full standards mode, almost standards mode and quirks mode?</span>
        <span class="answer">Answer: In standards mode, CSS is applied in accordance with the CSS2 specification. If the browser decides that the document is old-school, it’ll render it in quirks mode. This mode applies CSS in the quirky way that suited predecessors of that browser, or even of other browsers. Almost standards mode, in which the layout of images in table cells is implemented as in quirks mode, rather than in accordance with the CSS2 specification. In every other respect, this mode is equivalent to standards mode.</span>
    </section>

    <section id="question-block-5">
        <span class="question">5. What is CORS? And how does it work?</span>
        <span class="answer">Answer: Cross-origin resource sharing (CORS) is a mechanism that allows many resources (e.g., fonts, JavaScript, etc.) on a web page to be requested from another domain outside the domain from which the resource originated. It’s a mechanism supported in HTML5 that manages XMLHttpRequest access to a different domain.</span>
    </section>

    <section id="question-block-6">
        <span class="question">6.What are data-attributes good for?</span>
        <span class="answer">Answer: Custom data-attributes are a great way to simplify the storage of application data in your web pages.</span>
    </section>

    <section id="question-block-7">
        <span class="question">7. How do you serve a page with content in multiple languages?</span>
        <span class="answer">Answer: By changing the lang attribute on the html element.</span>
        <div class="pre">
            <code class="xml">&lt;<span class="pink">!DOCTYPE</span> html&gt;
                            <br>&lt;html <span class="green">lang=</span><span class="yellow">"en"</span>&gt;
                            </code>
        </div>
        <span class="extra-info">Elements can also be wrapped in a lang tag if you have more than one language on the same page.</span>
        <div class="pre">
            <code class="xml">&lt;<span class="pink">div</span> <span class="green">lang=</span><span class="yellow">"es"</span>&gt;Yo no hablo español&lt;/<span class="pink">div</span>&gt;
                            <br>&lt;<span class="pink">div</span> <span class="green">lang=</span><span class="yellow">"fr"</span>&gt;Je ne parle pas français&lt;/<span class="pink">div</span>&gt;
                            <br>&lt;<span class="pink">div</span> <span class="green">lang=</span><span class="yellow">"zh-Hans"</span>&gt;中国科学院文献情报中心&lt;/<span class="pink">div</span>&gt;
                            </code>
        </div>
    </section>

     <section id="question-block-8">
        <span class="question">8. Consider HTML5 as an open web platform. What are the building blocks of HTML5?</span>
        <span class="answer">
            Answer: The main building blocks are centred on HTML 5, CSS3, Javascript and SVG. Where HTML is a language to define the mark-up of a document (titles, headers, body, footer, tables, input forms etc.), CSS is the language to define style (formatting, colors, shades and the like). Javascript is a programming/scripting language and SVG is a language for creating 2D scalable vector graphics and images.
        </span>
    </section>

    <section id="question-block-9">
        <span class="question">9. Describe the difference between cookies, sessionStorage and localStorage.</span>
        <span class="answer">
            Answer:
            <p>sessionStorage, localStorage and Cookies all are used to store data on the client side. Each one has its own storage and expiration limit.</p>

            <p>localStorage: stores data with no expiration date, and gets cleared only through JavaScript, or clearing the Browser Cache / Locally Stored Data</p>

            <p>sessionStorage: similar to localStorage but expires when the browser closed (not the tab).</p>

            <p>Cookie: stores data that has to be sent back to the server with subsequent requests. Its expiration varies based on the type and the expiration duration can be set from either server-side or client-side (normally from server-side).</p>

            <p>Cookies are primarily for server-side reading (can also be read on client-side), localStorage and sessionStorage can only be read on client-side.</p>
        </span>
    </section>

    <section id="question-block-10">
        <span class="question">10. Describe the difference between &lt;script&gt;, &lt;script async&gt; and &lt;script defer&gt;.</span>
        <span class="answer">
            Answer:
            <p>&lt;script&gt; Normal execution:<br>
            This is the default behavior of the &lt;script&gt; element. Parsing of the HTML code pauses while the script is executing. For slow servers and heavy scripts this means that displaying the webpage will be delayed.</p>
            <p>&lt;script defer&gt; Deferred execution:<br>
            Delaying script execution until the HTML parser has finished. A positive effect of this attribute is that the DOM will be available for your script. However, since not every browser supports defer yet, don’t rely on it!</p>
            <p>&lt;script async&gt; Asynchronous execution:<br>
            Don’t care when the script will be available? Asynchronous is the best of both worlds: HTML parsing may continue and the script will be executed as soon as it’s ready. It is recommended for scripts such as Google Analytics.</p>
        </span>
    </section>

</div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('a[href^="#"]').on('click', function (event) {
            event.preventDefault();

            var target = this.hash;
            var $target = $(target);

            $('html, body').stop().animate({
                'scrollTop': $target.offset().top - 40
            }, 400, 'swing', function () {
                window.location.hash = target;
            });
        });
    });

</script>
